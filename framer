#!/usr/bin/php
<?php

	namespace framer;

	if (strtolower(php_sapi_name()) != 'cli') exit();

	/*
	 * Getting config vars
	*/
	include_once 'core/statics.php';
	include_once 'core/config.php';
	include_once 'core/consoler.php';


	switch ( $argv[1] )
	{
		// serve

		case 'serve':
			if (!isset($argv[2]) || (isset($argv[2]) && $argv[2]=='--dev'))
			{
				echo "Now serving on " . Config::$dev_host . ':' . Config::$serve_port . "\n";
				shell_exec("php -S " . Config::$dev_host . ':' . Config::$serve_port);
			}
			else if (isset($argv[2]) && $argv[2]=='--share')
			{
				echo "Now serving on " . Config::$share_host . ':' . Config::$serve_port . "\n";
				shell_exec("php -S " . Config::$share_host . ':' . Config::$serve_port);
			}
			break;



		// layout generating

		case 'g:layout':
			if ( isset($argv[2]) )
			{
				// creating content
				$content =
					"<?php \n" .
						"\tnamespace framer; \n\n" .
						"\t//stamp start \n" .
						"\tob_start(); \n\n" .
						"\tinclude __DIR__ . '/../' . \$path . '.vue.php'; \n\n" .
						"\t// get the content \n" .
						"\t\$content = ob_get_contents(); \n\n" .
						"\t// clean stamp content \n\n" .
						"\tob_end_clean(); \n" .
					"?> \n\n" .
					"<!--- wrapper ---> \n\n" .
					"<?= \$content ?> \n\n" .
					"<!--- wrapper --->";

				// writing file
				file_put_contents( __DIR__ . '/vues/layouts/' . $argv[2] . '.layout.php', $content );

				// print result
				exit( Consoler::colorize("Effectué: Le layout ". $argv[2] ." a bien été généré !\n", 'green') );
			}
			else {
				// print error
				exit( Consoler::colorize("Erreur: Vous devez specifier un nom pour votre layout.\n", 'red') );
			}
			break;


		// controller generating

		case 'g:controller':
			if ( isset($argv[2]) && ! preg_match("#controlleur#i", $argv[2]) )
			{
				$content =
					"<?php \n\n" .
						"\tnamespace framer; \n\n\n" .
						"\tclass ". ucfirst($argv[2]) ."Controlleur extends controlleur \n" .
						"\t{ \n" .
							"\t\tpublic function __construct( \$action=null ) \n" .
							"\t\t{ \n\n" .
							"\t\t} \n\n" .
							"\t\tpublic function index() \n" .
							"\t\t{ \n" .
								"\t\t\t\$this->render('view', 'layout', [ \"foo\" => \"bar !\" ]); \n" .
							"\t\t} \n" .
						"\t} \n";

				// writing file
				file_put_contents( __DIR__ . '/controlleurs/' . ucfirst($argv[2]) . 'Controlleur.php', $content );

				// print result
				exit( Consoler::colorize("Effectué: Le controlleur ". $argv[2] ." a bien été généré !\n", 'green') );
			}
			else {
				// print error
				exit( Consoler::colorize("Erreur: \n1 - Vous devez specifier un nom pour votre controlleur. \n2 - Le nom ne peut contenir \"controlleur\"\n", 'red') );
			}
			break;


		// controller generating

		case 'g:modele':
			if ( isset($argv[2]) && ! preg_match("#modele#i", $argv[2]) )
			{
				# get table fields
				$pdo_options[\PDO::ATTR_ERRMODE] = \PDO::ERRMODE_EXCEPTION ;
				$bd = new \PDO(Config::$db_type . ':dbname=' . Config::$db_name . '; host=' . Config::$db_host, Config::$db_user, Config::$db_password, $pdo_options) ;
				$bd->exec("set names utf8");

				$q = $bd->query("SELECT COLUMN_NAME, COLUMN_DEFAULT FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='". strtolower($argv[2]) ."'");
				$r = $q->fetchAll( \PDO::FETCH_OBJ );

				# compile attributes
				$attributes = [];

				foreach ($r as $k => $table)
				{
					$attributes[] = "\t\tpublic $". $table->COLUMN_NAME ." = \"". $table->COLUMN_DEFAULT ."\";";
				}

				$content =
					"<?php \n\n" .
						"\tnamespace framer; \n\n\n" .
						"\tclass ". ucfirst($argv[2]) ."Modele extends modele \n" .
						"\t{ \n" .
							implode( "\n", $attributes ) . "\n\n" .
							"\t\tpublic function __construct() \n" .
							"\t\t{ \n" .
								"\t\t\tparent::__construct('". strtolower($argv[2]) ."'); \n" .
							"\t\t} \n" .
						"\t} \n";

				// writing file
				file_put_contents( __DIR__ . '/modeles/' . ucfirst($argv[2]) . 'Modele.php', $content );

				// print result
				exit( Consoler::colorize("Effectué: Le modele ". $argv[2] ." a bien été généré !\n", 'green') );
			}
			else {
				// print error
				exit( Consoler::colorize("Erreur: \n1 - Vous devez specifier un nom pour votre modele. \n2 - Le nom ne peut contenir le mot \"modele\"\n", 'red') );
			}
			break;
	}
